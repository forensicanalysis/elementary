name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build-gui:
    name: Build elementary GUI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    steps:
      - name: Setup go 1.16
        uses: actions/setup-go@v2
        with: { go-version: '1.16' }
      - uses: actions/setup-python@v2
        with: { python-version: '3.9' }
      - name: Setup node
        uses: actions/setup-node@v2
        with: { node-version: '12' }
      - name: Checkout Code
        uses: actions/checkout@v2
      - run: make build-gui

      - name: Pack macOS
        run: zip -r ${{ matrix.os }}.zip darwin-amd64
        working-directory: cmd/elementary-gui/output
        if: matrix.os == 'macos-latest'
      - name: Pack Linux
        run: zip -r ${{ matrix.os }}.zip linux-amd64
        working-directory: cmd/elementary-gui/output
        if: matrix.os == 'ubuntu-latest'
      - name: Pack Windows
        run: 7z a ${{ matrix.os }}.zip windows-amd64
        working-directory: cmd/elementary-gui/output
        if: matrix.os == 'windows-latest'

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: ./cmd/elementary-gui/output/${{ matrix.os }}.zip
          name: elementary-gui-${{ matrix.os }}

  release:
    name: Release
    needs: [ build-gui ]
    runs-on: ubuntu-latest
    container:
      image: bepsays/ci-goreleaser:1.16.0-2
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with: { fetch-depth: 0 }
      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - uses: actions/download-artifact@v2
        with:
          path: cmd/elementary-gui/output
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          version: latest
          args: release --rm-dist
