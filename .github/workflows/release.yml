name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    container:
      image: bepsays/ci-goreleaser:1.16.0-2
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with: { fetch-depth: 0 }
      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          version: latest
          args: release --rm-dist

  release-gui:
    name: Release elementary GUI
    needs: [ release ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    steps:
      - name: Setup go 1.16
        uses: actions/setup-go@v2
        with: { go-version: '1.16' }
      - uses: actions/setup-python@v2
        with: { python-version: '3.9' }
      - name: Setup node
        uses: actions/setup-node@v2
        with: { node-version: '12' }
      - name: Checkout Code
        uses: actions/checkout@v2
      - run: make build-gui

      - name: Pack UNIX
        run: zip -r ${{ matrix.os }}.zip elementary-gui
        working-directory: cmd/elementary-gui
        if: matrix.os != 'windows-latest'
      - name: Pack Windows
        run: 7z a ${{ matrix.os }}.zip elementary-gui.exe
        working-directory: cmd/elementary-gui
        if: matrix.os == 'windows-latest'

      - run: echo "::set-output name=upload_url::https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets{?name,label}"
        shell: bash
        id: release

      - name: Upload Windows
        id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./${{ matrix.os }}.zip
          asset_name: windows-gui.zip
          asset_content_type: application/zip
        if: matrix.os == 'windows-latest'
      - name: Upload macOS
        id: upload-macos-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./${{ matrix.os }}.zip
          asset_name: macos-gui.zip
          asset_content_type: application/zip
        if: matrix.os == 'macos-latest'
      - name: Upload Linux
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./${{ matrix.os }}.zip
          asset_name: linux-gui.zip
          asset_content_type: application/zip
        if: matrix.os == 'ubuntu-latest'
